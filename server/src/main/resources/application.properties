# HTTP Server configuration
server.port=${PORT:8080}
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE:""}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:""}
server.api.domain=${API_DOMAIN:localhost}
server.cors.allowedOrigins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
server.api.rateLimit.enabled=${RATE_LIMIT_ENABLED:true}
# IP header to use for rate limiting (X-Forwarded-For, X-Real-IP, ...)
# If it is remoteAddr, the rate limiting will be done on the IP address of the client
http.ip.header=${HTTP_IP_HEADER:remoteAddr}

# Save logs to log file
logging.file.name=${LOG_FILE:librepass.log}

# Database
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:librepass}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:postgres}
spring.jpa.hibernate.ddl-auto = update

# Mail configuration
spring.mail.host=${MAIL_SMTP}
spring.mail.port=${MAIL_SMTP_PORT}
spring.mail.username=${MAIL_SMTP_USERNAME}
spring.mail.password=${MAIL_SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_TLS_ENABLED}
smtp.mail.address=${SMTP_EMAIL_ADDRESS}

# Json Web Token key pair
jwt.publicKeyFile=${JWT_PUBLIC_KEY_FILE:publicKey.pem}
jwt.privateKeyFile=${JWT_PRIVATE_KEY_FILE:privateKey.pem}

# Require email verification
email.verification.required=${EMAIL_VERIFICATION_REQUIRED:true}
