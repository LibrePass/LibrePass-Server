# HTTP Server configuration
server.port=${PORT:8080}
server.api.domain=${API_DOMAIN:localhost}
server.cors.allowedOrigins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
server.api.rateLimit.enabled=${RATE_LIMIT_ENABLED:true}
spring.mvc.converters.preferred-json-mapper=gson
# IP header to use for rate limiting (X-Forwarded-For, X-Real-IP, ...)
# If it is remoteAddr, the rate limiting will be done on the IP address of the client
http.ip.header=${HTTP_IP_HEADER:remoteAddr}

# URL to the frontend
web.url=${WEB_URL:localhost}

# Save logs to log file
logging.file.name=${LOG_FILE:librepass.log}

# Database
spring.datasource.url=${DATABASE_URI}
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto = update

# Mail configuration
spring.mail.host=${MAIL_SMTP}
spring.mail.port=${MAIL_SMTP_PORT}
spring.mail.username=${MAIL_SMTP_USERNAME}
spring.mail.password=${MAIL_SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_TLS_ENABLED}
smtp.mail.address=${SMTP_EMAIL_ADDRESS}

# Require email verification
email.verification.required=${EMAIL_VERIFICATION_REQUIRED:true}
# Send email when user logged in from a new device
email.newLogin=${EMAIL_NEW_LOGIN:true}

# Number of ciphers that a user can create.
limits.user.cipher=${LIMIT_USER_CIPHERS:500}

management.endpoints.web.exposure.include=health,info
management.info.build.enabled=true

# Enable Java 21 Virtual Threads
spring.threads.virtual.enabled=true

# Disable logging hibernate (spamming logs, such as when sql duplicated)
logging.level.org.hibernate=OFF
